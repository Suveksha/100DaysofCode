import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

//The total number of hourglass present in the matrix=(row-2)*(col-2)
//Therefore the loop runs for row-2 and col-2 times and the sum calculates the sum of the elements present in that hour glass.
static int row=6, col=6;
static void SumOfMatrix(int mat[][])
{
    int maxSum=Integer.MIN_VALUE;
    for(int i=0;i<row-2;i++)
    {
        for(int j=0;j<col-2;j++)
        {
            int sum=(mat[i][j]+mat[i][j+1]+mat[i][j+2])+(mat[i+1][j+1])+(mat[i+2][j]+mat[i+2][j+1]+mat[i+2][j+2]);
            maxSum=Math.max(maxSum,sum);
        }
        
    }
    System.out.println(maxSum);
}

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int[][] arr = new int[6][6];

        for (int i = 0; i < 6; i++) {
            String[] arrRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 6; j++) {
                int arrItem = Integer.parseInt(arrRowItems[j]);
                arr[i][j] = arrItem;
            }
            
            
        }
        SumOfMatrix(arr);
        scanner.close();
    }
}
